Here Project Notes Begin

<!-- ========== Start General Info ========== -->
HTML 5 says, go to the Semantic layout such as below:

<header>   <nav> <section> <main> <mark> <summary>  <time>
<article> <aside> <details> <figcaption> <figure>  <footer>
    
type : html-comment-block and css-comment-block , to give comments on html and css respectively

Use Ctrl D = smartly to code 

In website, use one font or maximum two fonts.

Flex and Grid related tip:  Inspect in browser, In the elements, click on the flex to see detailed flex/grid spacing, gap, position etc.  


Box-shadow, font-family, copy from internet very easily
<!-- ========== End General Info ========== -->


<!-- ========== START BEST PRACTICESS ========== -->
Throught the project remember this, how the following practices is used
In CSS, we apply some best practices such as   
base rule, layout, theme, ,module/reusable, States


/* layout */

.container{
    max-width: 142rem;
    margin: 0 auto;
    padding: 9.6rem 2.4rem;    
}

// in above .container layout, padding 2.4 rem is given for some space so that css elements do not stick to the corner


/* Base Rule */
*{}
heading,  p, li, a, label
The common style given to base rule elements would be overwrites according to the needs.

/* theme */
:root {
  --main-color: #0062ff;
  --supporting-color: #ebf3fe;
  --font-color: #424242;
  /* --bg-color: #ffffff; */
  --bg-color: #f7fcff;
  --heading-color: #000a19;
  --hero-heading-color: #003b99;
  --white-color: #ffffff;
  --para-color: #504e4d;
  --bnt-hover-bg-color: #003b99;
  --btn-box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
  --footer-bg-color: #040d12;
}

<!-- ========== End CSS Best practices ========== -->


<!-- ========== Header section Syling related note ========== -->



In navbar > nav-item > In anchor tag, we apply display: inline-block so that play easily with it i.e

a{display: inline-block}

<!-- Width: 0 is also imp so that transition knows which property to transition   -->
&::after{
  width: 0% ; 
}


<!-- It means (anchor tag)a  ko after ma hover garda Width:100% vaneko ho  -->
& li a:hover:after{
  width: 100%;
}

<!-- =========Header section Syling related note ========== -->



<!-- ========== Start Hero Section related note ========== -->
It is important section

#Note 1:
As per semantic rule in this section:    <main></main> content is very recommended 

#Note 2:
While applying padding top and bottom to btn, it overlap with paragraphic becoz we cannot apply padding top and bottom to inline element(anchor tag is a inline element) so We apply 
display: inline-block;  to btn which in our case

#Note 3:

(while we confused between giving margin or paddign to outer space)
Always use margin if we want outer space i.e in our case of (section hero) to give space between  para and heading Button.

Important rule: Allocate double the space(Margin) for the CTA button compared to the gap between the heading and paragraph. This emphasizes the significance of the CTA for audience intereaction

In our case :
Margin: 2rem 0 4rem 0; 

--------

In this we also used the shape divider plugin to give wave, curve shape to hero section.  For this we copy and paste code from shape divider websites.

as position: absolute is mentioned in shapes divider codes.
we need to apply Position: relative to parent element which is in our case is <main>
  position: relative;
</main>
In order to run that shapes plugin code accurately.


Note : In hero section,  grid gap is important i,e 
.section-hero .grid{
  align-items: center;
  grid-gap: 6.4rem;
}


// For section hero img placement, we apply grid/2-column(each 1fr) to container, the catch is we provide width 100% to img  which is relative to section-hero-img not to 100% of the grid container.

.section-hero--image img{
  width: 100%;
  height: auto;
}

To flip image,  simply  scalex(-1)
img{transform: scaleX(-1);}



<!-- ========== End Hero Section ========== -->


<!-- ========== Start About Section ========== -->

<!-- How icon which we take here as a img, size is managed  -->
icon img{
  width: 15rem;
  height: auto;
  background: color;
}

<!-- you can also use padding to space between div horizontally, but we have grid gap also -->
.about-section .about-div{
  text-align: center;
  padding: 2rem;  
}
.about-section .grid{
  gap: 3rem;
}

 
<!-- ========== End About Section ========== -->


<!-- ========== Start Course Section ========== -->

 <!-- Font awesome CDN Link  -->
copy and  Paste the  font-awesome-cdn link in head tag before the  link rel 
 
Then go to font awesome and either copy code or unicode(such as: f3b8)



html: <i class="fa-brands fa-js"></i>

Css:  You can edit icon like below

.fa-brands{
  padding: 2.4rem;
  background-color: var(--supporting-color);
  font-size: 4rem;
  color: 
  
}


<!-- In order to put the icon/img on the middle of the background, just add paddding to icons/img and change bg , size, color as requirement.

note : font-size increase the size of the img/icon whereas the padding increase th e the size of the background

-->

<!-- ========== End Course Section ========== -->



<!-- ========== Start Footer Section ========== -->

.social-footer--icon .fa-brands{
  all: initial;  // this is for just putting initial style and removing all
  all:unset;   // it is from preventing inheritated style form resuable/modules
 
}


<!-- To CENTER DIV  -->
.social-footer--icon .fa-brands{
  all: unset;
  font-family: "Font Awesome 6 Brands";
  font-weight: 400;

<!-- To center Div -->
  display: grid;
  place-items: center;
 
}

<!-- ========== End Footer Section ========== -->


<!-- ========== Start Actual contact Section ========== -->


<!-- display: block make the input type on nextline line  -->
label{
  display: block;
  text-transform: capitalize;
}


 <!-- to Edit the label and input type -->
input, textarea{
  width: 100%;
  padding: 1.4rem 2.4rem;
  font-size: 1.7rem;
  letter-spacing: 0.1rem;
}

//can also edit placeholder
::placeholder{
  font-size: 1.6rem;
  letter-spacing: 0.1rem;
}

<!-- Remember: letter-spacing and appropriate font-size is very useful in making the text looks nice   and also line height
 -->

 letter-spacing: 0.1rem;




 ------------------------------------------------------
        RECEIVE EMAIL WITHOUT JS,BACKEND ON YOUR EMAIL: formspree
 ------------------------------------------------------

 <!-- ONE OF THE EXCITING FEATURE IS YOU CAN RECEIVE THE DATA ENTER TO THE FORM IN YOUR PROFESSIONAL EMAIL WITH OUT EVEN USING JAVASCRIPT. BACKEND, DATABASE WITH THE HELP OF  
FORMSPREE -->

Link :    https://formspree.io/


create a form project.  Then copy the link in the form action 

--Note : input type should have a "name"  as below

<label for="name">Username</label> <br>
            <input type="text" name="username" id="name" placeholder="enter your name" required>

i mean this part :   name="username"


------------------------------------------------------
------------------------------------------------------


<!-- ========== End Actual contact Section ========== -->



<!-- ========== Start Media queries ========== -->
@media(max-width: 1380px) {
  html{
      /* font-size: 62.5%; */
      /* 1rem: 10px */
      /* 1px: 6.25% */

      /* to make 1rem = 9px */
      /* 6.25*9 = 56.25% */

      <!-- Thus finally at font-size 56.25% 1rem: 9px -->
      font-size: 56.25%;
      /* 1rem: 9px */
  }




  <!-- New method -->

  @media(max-width: 1380px) {}
  now can be written as :
  @media(width <= 1380px){}


<!-- To remove styling img etc very easily using all:unset -->

  & .why-section--center{
    &::before{
        all:unset
    }

    &::after{
        all:unset

    }
}

<!-- ========== End media queries ========== -->



<!-- ========== SEO Section ========== -->


META DESCRIPTION

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="NSB is a home of speakers that of experts trainers, coaches, leader from various field">


  <!-- Meta keywords -->
    <meta name="keywords" content="">

e.g
    <meta name="keywords" content="Nepalspeakersbureau, trainig nepal, public speaking">

    <!-- robots -->
    very imp, index means allow to rank,    
    <meta name="robots" content="index, follow">
    <!-- noindex case whcih is usally for login page, confidential page etc -->
    <meta name="robots" content="noindex, follow">



<!-- PROPER HEADING TAGS -->
Use H1 to h1 to h6


<!-- IMAGE OPTIMIZATION -->
very imp: always write alt attribute for every img

imp:  Always try to make img in wepp format instead of png
<img src="/Images/nsb-blue-logo.png"

There are lots of sites to convert from png to wepp as below

awesome sites for this converter
https://squoosh.app/ 


<!-- =========SEO Section ========== -->


<!-- ========== Start CSS performance and optimization ========== -->
1.  Minification and Compression
https://www.toptal.com/developers/cssminifier

2. Critical CSS: "Above the Fold" content
      critical css means makes sure your critical part is displayed properly so if external css is taking time then also use inline css 
3. Reducing Render Blocking

<!-- ========== End CSS performance and optimization ========== -->



<!-- ========== Scrolling ========== -->

<!--  scrolling -->
<li class="nav-item"><a href="#section-contact--homepage" class="nav-link">Contact</a></li>

<!-- Smooth scrolling -->



html{
  font-size: 62.5%;
  /* 1rem: 10px */

  scroll-behavior: smooth;   

  /* Scroll snap */

  scroll-snap-type: y mandatory;
}


<!-- Scroll snapping -->
While scrolling, scroll each whole section/page at a time
instead x, mostly we use y(vertical)


section, .navbar-section, footer, .section-contact--homepage{
  scroll-snap-align: start;
}

Link for code 
https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-snap-type

<!-- ========== End Scrolling ========== -->




<!-- ========== Start Website testing ========== -->
1. Lighthouse testing
2. 
3. https://gtmetrix.com/

<!-- ========== End Website testing ========== -->


<!-- ========== Start CSS plugin ========== -->

Link
https://michalsnik.github.io/aos/
https://github.com/michalsnik/aos




<!-- IN Head tag -->
<link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />

<!-- In before body close tag(script tag) -->
<script src="https://unpkg.com/aos@next/dist/aos.js"></script>
<script>
  AOS.init();
</script>


<!-- Now use in where you want in your div -->


<!-- ========== End CSS plugin ========== -->










 






